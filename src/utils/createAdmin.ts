import { supabase } from '../lib/supabase';

interface AdminCreationResult {
  success: boolean;
  message: string;
  email?: string;
  password?: string;
  configurationRequired?: boolean;
  user?: any;
}

export async function createAdminUser() {
  try {
    console.log("üìù –ù–∞—á–∞–ª–æ –ø—Ä–æ—Ü–µ—Å—Å–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —á–µ—Ä–µ–∑ bootstrap-admin");
    
    // Call the bootstrap-admin edge function
    try {
      const response = await fetch(`${import.meta.env.VITE_SUPABASE_URL}/functions/v1/bootstrap-admin`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'Authorization': `Bearer ${import.meta.env.VITE_SUPABASE_ANON_KEY}`
        }
      });
      
      if (!response.ok) {
        const errorText = await response.text();
        throw new Error(`Edge function failed with status ${response.status}: ${errorText}`);
      }
      
      const data = await response.json();
      console.log("üìù Bootstrap admin result:", data);
      
      if (data.success) {
        return {
          success: true,
          message: data.message || '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω',
          email: data.email || 'doirp@sns.ru',
          password: data.password || '123456',
          user: data.user
        };
      } else {
        throw new Error(data.error || 'Unknown error in bootstrap-admin function');
      }
    } catch (edgeFunctionError) {
      console.warn("üìù Edge function error:", edgeFunctionError);
      // Fall back to RPC methods if edge function fails
    }
    
    // Try using supabase.rpc first as it's the most direct method
    try {
      console.log("üìù –ü—ã—Ç–∞–µ–º—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å rpc_bootstrap_admin");
      const { data: rpcResult, error: rpcError } = await supabase.rpc('rpc_bootstrap_admin');
      
      if (!rpcError && rpcResult?.success) {
        console.log("üìù rpc_bootstrap_admin —É—Å–ø–µ—à–Ω–æ:", rpcResult);
        return {
          success: true,
          message: '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω —á–µ—Ä–µ–∑ RPC. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ —É—á—ë—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞.',
          email: 'doirp@sns.ru',
          password: '123456'
        };
      } else {
        console.warn("üìù –û—à–∏–±–∫–∞ rpc_bootstrap_admin:", rpcError);
      }
    } catch (rpcErr) {
      console.warn("üìù –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –≤—ã–∑–æ–≤–µ rpc_bootstrap_admin:", rpcErr);
    }

    // Synchronize auth state in case user exists in one table but not another
    console.log("üìù –ü–æ–ø—ã—Ç–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ auth –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π");
    try {
      await supabase.rpc('rpc_sync_all_users_to_auth');
      console.log("üìù –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞");
    } catch (syncError) {
      console.warn("üìù –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏:", syncError);
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä
    const { data: adminUser, error: adminCheckError } = await supabase
      .from('users')
      .select('*')
      .eq('email', 'doirp@sns.ru')
      .maybeSingle();
      
    if (adminUser) {
      console.log("üìù –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö");
      return {
        success: true,
        message: '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ —Å–∏—Å—Ç–µ–º–µ. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ —É—á—ë—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞.',
        email: 'doirp@sns.ru',
        password: '123456'
      };
    }

    // –ü–æ–ø—ã—Ç–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —á–µ—Ä–µ–∑ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—É—é bootstrap —Ñ—É–Ω–∫—Ü–∏—é
    console.log("üìù –ü–æ–ø—ã—Ç–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —á–µ—Ä–µ–∑ bootstrap RPC");
    try {
      const { data: bootstrapData, error: bootstrapError } = await supabase.rpc('rpc_create_bootstrap_admin');
      
      if (!bootstrapError && bootstrapData) {
        if (bootstrapData.success) {
          console.log("üìù –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω —á–µ—Ä–µ–∑ bootstrap —Ñ—É–Ω–∫—Ü–∏—é");
          return {
            success: true,
            message: '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —É—á—ë—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞.',
            email: 'doirp@sns.ru',
            password: '123456'
          };
        } else {
          console.log("üìù –û—à–∏–±–∫–∞ bootstrap —Ñ—É–Ω–∫—Ü–∏–∏:", bootstrapData.message);
          throw new Error(bootstrapData.message || 'Unknown bootstrap error');
        }
      } else {
        console.log("üìù –û—à–∏–±–∫–∞ –≤—ã–∑–æ–≤–∞ bootstrap RPC:", bootstrapError);
        throw bootstrapError || new Error('Bootstrap RPC call failed');
      }
    } catch (bootstrapErr) {
      console.warn("üìù –û—à–∏–±–∫–∞ –≤—ã–∑–æ–≤–∞ bootstrap RPC:", bootstrapErr);
    }

    // –ü—ã—Ç–∞–µ–º—Å—è —Å–æ–∑–¥–∞—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —á–µ—Ä–µ–∑ –æ–±—ã—á–Ω—É—é RPC —Ñ—É–Ω–∫—Ü–∏—é
    console.log("üìù –ü–æ–ø—ã—Ç–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —á–µ—Ä–µ–∑ –æ–±—ã—á–Ω—É—é RPC");
    try {
      const { data: rpcData, error: rpcError } = await supabase.rpc('rpc_create_user', {
        p_email: 'doirp@sns.ru',
        p_full_name: '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –ø–æ—Ä—Ç–∞–ª–∞',
        p_role: 'administrator'
      });
      
      if (!rpcError && rpcData) {
        if (rpcData.success) {
          console.log("üìù –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω —á–µ—Ä–µ–∑ RPC —Ñ—É–Ω–∫—Ü–∏—é");
          return {
            success: true,
            message: '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —É—á—ë—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞.',
            email: 'doirp@sns.ru',
            password: '123456'
          };
        } else {
          console.log("üìù –û—à–∏–±–∫–∞ RPC —Ñ—É–Ω–∫—Ü–∏–∏:", rpcData.message);
          throw new Error(rpcData.message || 'Unknown RPC error');
        }
      } else {
        console.log("üìù –û—à–∏–±–∫–∞ RPC:", rpcError);
        throw rpcError || new Error('RPC call failed');
      }
    } catch (rpcErr) {
      console.warn("üìù –û—à–∏–±–∫–∞ –≤—ã–∑–æ–≤–∞ RPC:", rpcErr);
    }
    
    // –ü—ã—Ç–∞–µ–º—Å—è —Å–æ–∑–¥–∞—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —á–µ—Ä–µ–∑ Edge Function
    console.log("üìù –ü–æ–ø—ã—Ç–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —á–µ—Ä–µ–∑ Edge Function");
    try {
      const { data: functionData, error: functionError } = await supabase.functions.invoke(
        'create-user', {
          body: {
            email: 'doirp@sns.ru',
            password: '123456',
            full_name: '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –ø–æ—Ä—Ç–∞–ª–∞',
            role: 'administrator'
          }
        }
      );
      
      if (!functionError && functionData) {
        if (functionData.success) {
          console.log("üìù –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω —á–µ—Ä–µ–∑ Edge Function");
          return {
            success: true,
            message: '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω —á–µ—Ä–µ–∑ Edge Function. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —É—á—ë—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞.',
            email: 'doirp@sns.ru',
            password: '123456'
          };
        } else {
          console.log("üìù –û—à–∏–±–∫–∞ Edge Function:", functionData.message);
          throw new Error(functionData.message || 'Unknown Edge Function error');
        }
      } else {
        console.log("üìù –û—à–∏–±–∫–∞ Edge Function:", functionError);
        throw functionError || new Error('Edge Function call failed');
      }
    } catch (functionErr) {
      console.warn("üìù –û—à–∏–±–∫–∞ –≤—ã–∑–æ–≤–∞ Edge Function:", functionErr);
    }
    
    // –ï—Å–ª–∏ –≤—Å–µ –º–µ—Ç–æ–¥—ã –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª–∏, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—à–∏–±–∫—É —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏
    return {
      success: false,
      message: '–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏.\n\n–í–æ–∑–º–æ–∂–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è:\n\n' +
               '1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Supabase\n' +
               '2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ RLS –ø–æ–ª–∏—Ç–∏–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ\n' +
               '3. –í Supabase Dashboard –æ—Ç–∫–ª—é—á–∏—Ç–µ Email Confirmation\n' +
               '4. –°–æ–∑–¥–∞–π—Ç–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –≤—Ä—É—á–Ω—É—é —á–µ—Ä–µ–∑ Supabase Dashboard\n\n' +
               '–î–ª—è —Ä—É—á–Ω–æ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è:\n' +
               '- Email: doirp@sns.ru\n' +
               '- Password: 123456\n' +
               '- Role: administrator',
      configurationRequired: true
    };
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:', error);
    
    // –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º –±–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—à–∏–±–∫–µ
    if (error instanceof Error) {
      if (error.message.includes('Email confirm') || error.message.includes('unexpected_failure')) {
        return {
          success: false,
          message: '–¢—Ä–µ–±—É–µ—Ç—Å—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è email –≤ Supabase Dashboard. –ó–∞–π–¥–∏—Ç–µ –≤ Dashboard ‚Üí Authentication ‚Üí Settings –∏ –æ—Ç–∫–ª—é—á–∏—Ç–µ "Enable Email Confirm" –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è.',
          configurationRequired: true
        };
      }
      
      if (error.message.includes('already registered') || error.message.includes('23505') || error.message.includes('already exists')) {
        return {
          success: true,
          message: '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ —Å–∏—Å—Ç–µ–º–µ. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —É—á—ë—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞.',
          email: 'doirp@sns.ru',
          password: '123456'
        };
      }
      
      return {
        success: false,
        message: `–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: ${error.message}\n\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–æ–∑–¥–∞—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –≤—Ä—É—á–Ω—É—é —á–µ—Ä–µ–∑ Supabase Dashboard –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É.`
      };
    }
    
    return {
      success: false,
      message: '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Supabase –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.'
    };
  }
}