import { supabase } from '../lib/supabase';

interface UserCreationResult {
  success: boolean;
  message: string;
  email?: string;
  password?: string;
  configurationRequired?: boolean;
  user?: any;
}

export async function createRegularUser(
  email: string,
  fullName: string,
  role: string = 'employee',
  customPassword: string = '123456'
): Promise<UserCreationResult> {
  try {
    console.log(`üìù –ù–∞—á–∞–ª–æ –ø—Ä–æ—Ü–µ—Å—Å–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —Ä–æ–ª—å—é ${role}`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ —Ç–∞–±–ª–∏—Ü–µ users
    const { data: existingUser, error: userCheckError } = await supabase
      .from('users')
      .select('*')
      .eq('email', email)
      .maybeSingle();
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ auth.users
    let authUserExists = false;
    try {
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º Edge Function –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ auth
      const { data: authCheckData, error: authCheckError } = await supabase.functions.invoke(
        'create-auth-user', {
          body: {
            action: 'check_exists',
            email: email
          }
        }
      );
      
      if (!authCheckError && authCheckData && authCheckData.exists) {
        authUserExists = true;
        console.log("üìù –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ auth.users");
      }
    } catch (authCheckErr) {
      console.warn("üìù –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –≤ auth:", authCheckErr);
    }
    
    // –°–ª—É—á–∞–π 1: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ –æ–±–µ–∏—Ö —Ç–∞–±–ª–∏—Ü–∞—Ö
    if (existingUser && authUserExists) {
      console.log("üìù –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ –æ–±–µ–∏—Ö —Ç–∞–±–ª–∏—Ü–∞—Ö");
      return {
        success: true,
        message: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ —Å–∏—Å—Ç–µ–º–µ.',
        email: email,
        password: customPassword,
        user: existingUser
      };
    }
    
    // –°–ª—É—á–∞–π 2: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å—É—â–µ—Å—Ç–≤—É–µ—Ç —Ç–æ–ª—å–∫–æ –≤ users, –Ω–æ –Ω–µ –≤ auth
    if (existingUser && !authUserExists) {
      console.log("üìù –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ users, –Ω–æ –Ω–µ –≤ auth - —Å–æ–∑–¥–∞–µ–º auth –∑–∞–ø–∏—Å—å");
      try {
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º Edge Function –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è auth –∑–∞–ø–∏—Å–∏ —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º ID
        const { data: syncData, error: syncError } = await supabase.functions.invoke(
          'create-auth-user', {
            body: {
              email: email,
              password: customPassword,
              userId: existingUser.id,
              fullName: fullName,
              role: role
            }
          }
        );
        
        if (!syncError && syncData && syncData.success) {
          return {
            success: true,
            message: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–ª –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö. –°–æ–∑–¥–∞–Ω–∞ —É—á–µ—Ç–Ω–∞—è –∑–∞–ø–∏—Å—å –¥–ª—è –≤—Ö–æ–¥–∞.',
            email: email,
            password: customPassword,
            user: existingUser
          };
        } else {
          throw new Error(syncData?.error || '–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å auth –∑–∞–ø–∏—Å—å');
        }
      } catch (syncErr) {
        console.warn("üìù –û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Å auth:", syncErr);
        
        // –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å auth –∑–∞–ø–∏—Å—å, —É–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ —Å–æ–∑–¥–∞–µ–º –∑–∞–Ω–æ–≤–æ
        console.log("üìù –£–¥–∞–ª–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è");
        const { error: deleteError } = await supabase
          .from('users')
          .delete()
          .eq('email', email);
          
        if (deleteError) {
          console.error("üìù –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è:", deleteError);
          throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
        }
        
        // –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      }
    }
    
    // –°–ª—É—á–∞–π 3: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å—É—â–µ—Å—Ç–≤—É–µ—Ç —Ç–æ–ª—å–∫–æ –≤ auth, –Ω–æ –Ω–µ –≤ users
    // –≠—Ç–æ—Ç —Å–ª—É—á–∞–π –±—É–¥–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∞–Ω –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    
    // –°–ª—É—á–∞–π 4: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –Ω–∏ –≤ –æ–¥–Ω–æ–π —Ç–∞–±–ª–∏—Ü–µ - —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ
    console.log("üìù –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è");
    
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º Edge Function create-user-and-auth –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –æ–±–µ–∏—Ö —Ç–∞–±–ª–∏—Ü–∞—Ö
    try {
      const { data: functionData, error: functionError } = await supabase.functions.invoke(
        'create-user-and-auth', {
          body: {
            email: email,
            password: customPassword,
            full_name: fullName,
            role: role
          }
        }
      );
      
      if (!functionError && functionData && functionData.success) {
        console.log("üìù –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω —á–µ—Ä–µ–∑ Edge Function");
        return {
          success: true,
          message: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω.',
          email: email,
          password: customPassword,
          user: functionData.user
        };
      } else {
        console.log("üìù –û—à–∏–±–∫–∞ Edge Function:", functionData?.error || functionError);
        throw new Error(functionData?.error || functionError?.message || '–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
      }
    } catch (functionErr) {
      console.warn("üìù –û—à–∏–±–∫–∞ –≤—ã–∑–æ–≤–∞ Edge Function:", functionErr);
      
      // –ü—Ä–æ–±—É–µ–º –∑–∞–ø–∞—Å–Ω–æ–π –≤–∞—Ä–∏–∞–Ω—Ç - —Å–æ–∑–¥–∞–Ω–∏–µ —á–µ—Ä–µ–∑ RPC
      try {
        console.log("üìù –ü–æ–ø—ã—Ç–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —á–µ—Ä–µ–∑ RPC —Ñ—É–Ω–∫—Ü–∏—é");
        const { data: rpcData, error: rpcError } = await supabase.rpc('rpc_create_user_safe', {
          p_email: email,
          p_full_name: fullName,
          p_role: role,
          p_password: customPassword
        });
        
        if (!rpcError && rpcData && rpcData.success) {
          console.log("üìù –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω —á–µ—Ä–µ–∑ RPC");
          return {
            success: true,
            message: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω —á–µ—Ä–µ–∑ –∑–∞–ø–∞—Å–Ω–æ–π –º–µ—Ç–æ–¥.',
            email: email,
            password: customPassword,
            user: rpcData.user
          };
        } else {
          console.log("üìù –û—à–∏–±–∫–∞ RPC:", rpcError || rpcData?.error);
          throw new Error(rpcData?.error || rpcError?.message || '–û—à–∏–±–∫–∞ RPC —Ñ—É–Ω–∫—Ü–∏–∏');
        }
      } catch (rpcErr) {
        console.warn("üìù –û—à–∏–±–∫–∞ –≤—ã–∑–æ–≤–∞ RPC:", rpcErr);
      }
    }
    
    // –ï—Å–ª–∏ –≤—Å–µ –º–µ—Ç–æ–¥—ã –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª–∏, –ø—Ä–æ–±—É–µ–º –ø—Ä—è–º–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ
    try {
      console.log("üìù –ü–æ–ø—ã—Ç–∫–∞ –ø—Ä—è–º–æ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è");
      
      // 1. –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ auth.users
      const { data: authData, error: authError } = await supabase.auth.signUp({
        email: email,
        password: customPassword,
        options: {
          data: {
            full_name: fullName,
            role: role
          }
        }
      });
      
      if (authError) throw authError;
      
      // 2. –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ public.users
      const { data: userData, error: userError } = await supabase
        .from('users')
        .insert({
          id: authData.user?.id,
          email: email,
          full_name: fullName,
          role: role,
          subdivision: 'management_company',
          status: 'active',
          is_active: true,
          work_experience_days: 0,
          department: 'management_company'
        })
        .select()
        .single();
      
      if (userError) throw userError;
      
      return {
        success: true,
        message: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω –Ω–∞–ø—Ä—è–º—É—é.',
        email: email,
        password: customPassword,
        user: userData
      };
    } catch (directErr) {
      console.error("üìù –û—à–∏–±–∫–∞ –ø—Ä—è–º–æ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è:", directErr);
    }
    
    // –ï—Å–ª–∏ –≤—Å–µ –º–µ—Ç–æ–¥—ã –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª–∏, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—à–∏–±–∫—É —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏
    return {
      success: false,
      message: '–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏.\n\n–í–æ–∑–º–æ–∂–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è:\n\n' +
               '1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Supabase\n' +
               '2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ RLS –ø–æ–ª–∏—Ç–∏–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ\n' +
               '3. –í Supabase Dashboard –æ—Ç–∫–ª—é—á–∏—Ç–µ Email Confirmation\n' +
               '4. –°–æ–∑–¥–∞–π—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤—Ä—É—á–Ω—É—é —á–µ—Ä–µ–∑ Supabase Dashboard\n\n' +
               '–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è: –í–æ–∑–º–æ–∂–Ω–æ, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ –æ–¥–Ω–æ–π —Ç–∞–±–ª–∏—Ü–µ, –Ω–æ –Ω–µ –≤ –¥—Ä—É–≥–æ–π.',
      configurationRequired: true
    };
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
    
    // –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º –±–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—à–∏–±–∫–µ
    if (error instanceof Error) {
      if (error.message.includes('Email confirm') || error.message.includes('unexpected_failure')) {
        return {
          success: false,
          message: '–¢—Ä–µ–±—É–µ—Ç—Å—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è email –≤ Supabase Dashboard. –ó–∞–π–¥–∏—Ç–µ –≤ Dashboard ‚Üí Authentication ‚Üí Settings –∏ –æ—Ç–∫–ª—é—á–∏—Ç–µ "Enable Email Confirm" –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è.',
          configurationRequired: true
        };
      }
      
      if (error.message.includes('already registered') || error.message.includes('23505') || error.message.includes('already exists')) {
        // –ï—Å–ª–∏ –æ—à–∏–±–∫–∞ —Å–≤—è–∑–∞–Ω–∞ —Å –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ–º, –ø—Ä–æ–±—É–µ–º –∏—Å–ø—Ä–∞–≤–∏—Ç—å —Å–∏—Ç—É–∞—Ü–∏—é
        try {
          console.log("üìù –û–±–Ω–∞—Ä—É–∂–µ–Ω –¥—É–±–ª–∏–∫–∞—Ç, –ø–æ–ø—ã—Ç–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è");
          
          // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ users
          const { data: existingUser } = await supabase
            .from('users')
            .select('id')
            .eq('email', email)
            .maybeSingle();
            
          if (existingUser) {
            // –£–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            await supabase
              .from('users')
              .delete()
              .eq('email', email);
              
            // –†–µ–∫—É—Ä—Å–∏–≤–Ω–æ –≤—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            console.log("üìù –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è –¥—É–±–ª–∏–∫–∞—Ç–∞");
            return createRegularUser(email, fullName, role, customPassword);
          }
        } catch (recoveryErr) {
          console.error("üìù –û—à–∏–±–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è:", recoveryErr);
        }
        
        return {
          success: false,
          message: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º email —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –Ω–æ –≤–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥—Ä—É–≥–æ–π email –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.'
        };
      }
      
      return {
        success: false,
        message: `–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${error.message}\n\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–æ–∑–¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤—Ä—É—á–Ω—É—é —á–µ—Ä–µ–∑ Supabase Dashboard –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É.`
      };
    }
    
    return {
      success: false,
      message: '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Supabase –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.'
    };
  }
}